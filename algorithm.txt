//一个利用缓存块写入流的算法
private BufferedOutputStream out;       
	int offset = 0;
        int chunckSize = 1024;
        while (offset < pl.length) {
        	int length = Math.min(chunckSize, pl.length - offset);
        	out.write(pl, offset, length);
        	offset += chunckSize;
        	clientState.notifySentBytes(length);
        }	

验证号码：
方法一：
import java.util.regex.Matcher;  
  
　　import java.util.regex.Pattern;  
  
　　String value="手机号";  
  
　　String regExp = "^[1]([3][0-9]{1}|59|58|88|89)[0-9]{8}$";  
  
　　Pattern p = Pattern.compile(regExp);  
  
　　Matcher m = p.matcher(value);  
  
　　return m.matches();//boolean  


方法二：

import java.io.IOException;  
  
　　import java.util.regex.Matcher;  
  
　　import java.util.regex.Pattern;  
  
　　public class ClassPathResource {  
  
　　public static boolean isMobileNO(String mobiles){  
  
　　Pattern p = Pattern.compile("^((13[0-9])|(15[^4,\\D])|(18[0,5-9]))\\d{8}$");  
  
　　Matcher m = p.matcher(mobiles);  
  
　　System.out.println(m.matches()+"---");  
  
　　return m.matches();  
  
　　}  
  
　　public static void main(String[] args) throws IOException {  
  
　　System.out.println(ClassPathResource.isMobileNO("12016155153"));  
  
　　}  
  
　　}

----------------------------------------------------------------------------------------------------  
交换两个变量值

int a = 19;
int b = 32;

a = a ^ b;
b = a ^ b;
a = a ^ b;